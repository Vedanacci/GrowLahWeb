{"ast":null,"code":"// /*eslint-disable*/\n// import React from \"react\";\n// import classNames from \"classnames\";\n// import PropTypes from \"prop-types\";\n// import { NavLink } from \"react-router-dom\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Drawer from \"@material-ui/core/Drawer\";\n// import Hidden from \"@material-ui/core/Hidden\";\n// import List from \"@material-ui/core/List\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import Icon from \"@material-ui/core/Icon\";\n// // core components\n// import AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\n// import RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n// import styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n// const useStyles = makeStyles(styles);\n// export default function Sidebar(props) {\n//   const classes = useStyles();\n//   // verifies if routeName is the one active (in browser input)\n//   function activeRoute(routeName) {\n//     return window.location.href.indexOf(routeName) > -1 ? true : false;\n//   }\n//   const { color, logo, image, logoText, routes } = props;\n//   var links = (\n//     <List className={classes.list}>\n//       {routes.map((prop, key) => {\n//         var activePro = \" \";\n//         var listItemClasses;\n//         if (prop.path === \"/upgrade-to-pro\") {\n//           activePro = classes.activePro + \" \";\n//           listItemClasses = classNames({\n//             [\" \" + classes[color]]: true\n//           });\n//         } else {\n//           listItemClasses = classNames({\n//             [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n//           });\n//         }\n//         const whiteFontClasses = classNames({\n//           [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n//         });\n//         return (\n//           <NavLink\n//             to={prop.layout + prop.path}\n//             className={activePro + classes.item}\n//             activeClassName=\"active\"\n//             key={key}\n//           >\n//             <ListItem button className={classes.itemLink + listItemClasses}>\n//               {typeof prop.icon === \"string\" ? (\n//                 <Icon\n//                   className={classNames(classes.itemIcon, whiteFontClasses, {\n//                     [classes.itemIconRTL]: props.rtlActive\n//                   })}\n//                 >\n//                   {prop.icon}\n//                 </Icon>\n//               ) : (\n//                 <prop.icon\n//                   className={classNames(classes.itemIcon, whiteFontClasses, {\n//                     [classes.itemIconRTL]: props.rtlActive\n//                   })}\n//                 />\n//               )}\n//               <ListItemText\n//                 primary={props.rtlActive ? prop.rtlName : prop.name}\n//                 className={classNames(classes.itemText, whiteFontClasses, {\n//                   [classes.itemTextRTL]: props.rtlActive\n//                 })}\n//                 disableTypography={true}\n//               />\n//             </ListItem>\n//           </NavLink>\n//         );\n//       })}\n//     </List>\n//   );\n//   var brand = (\n//     <div className={classes.logo}>\n//       <a\n//         href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n//         className={classNames(classes.logoLink, {\n//           [classes.logoLinkRTL]: props.rtlActive\n//         })}\n//         target=\"_blank\"\n//       >\n//         <div className={classes.logoImage}>\n//           <img src={logo} alt=\"logo\" className={classes.img} />\n//         </div>\n//         {logoText}\n//       </a>\n//     </div>\n//   );\n//   return (\n//     <div>\n//       <Hidden mdUp implementation=\"css\">\n//         <Drawer\n//           variant=\"temporary\"\n//           anchor={props.rtlActive ? \"left\" : \"right\"}\n//           open={props.open}\n//           classes={{\n//             paper: classNames(classes.drawerPaper, {\n//               [classes.drawerPaperRTL]: props.rtlActive\n//             })\n//           }}\n//           onClose={props.handleDrawerToggle}\n//           ModalProps={{\n//             keepMounted: true // Better open performance on mobile.\n//           }}\n//         >\n//           {brand}\n//           <div className={classes.sidebarWrapper}>\n//             {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n//             {links}\n//           </div>\n//           {image !== undefined ? (\n//             <div\n//               className={classes.background}\n//               style={{ backgroundImage: \"url(\" + image + \")\" }}\n//             />\n//           ) : null}\n//         </Drawer>\n//       </Hidden>\n//       <Hidden smDown implementation=\"css\">\n//         <Drawer\n//           anchor={props.rtlActive ? \"right\" : \"left\"}\n//           variant=\"permanent\"\n//           open\n//           classes={{\n//             paper: classNames(classes.drawerPaper, {\n//               [classes.drawerPaperRTL]: props.rtlActive\n//             })\n//           }}\n//         >\n//           {brand}\n//           <div className={classes.sidebarWrapper}>{links}</div>\n//           {image !== undefined ? (\n//             <div\n//               className={classes.background}\n//               style={{ backgroundImage: \"url(\" + image + \")\" }}\n//             />\n//           ) : null}\n//         </Drawer>\n//       </Hidden>\n//     </div>\n//   );\n// }\n// Sidebar.propTypes = {\n//   rtlActive: PropTypes.bool,\n//   handleDrawerToggle: PropTypes.func,\n//   bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n//   logo: PropTypes.string,\n//   image: PropTypes.string,\n//   logoText: PropTypes.string,\n//   routes: PropTypes.arrayOf(PropTypes.object),\n//   open: PropTypes.bool\n// };","map":{"version":3,"sources":["/Users/garg10435/Desktop/material-dashboard-react-master/src/components/Sidebar/Sidebar.js"],"names":[],"mappingssourcesContent":["// /*eslint-disable*/\n// import React from \"react\";\n// import classNames from \"classnames\";\n// import PropTypes from \"prop-types\";\n// import { NavLink } from \"react-router-dom\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Drawer from \"@material-ui/core/Drawer\";\n// import Hidden from \"@material-ui/core/Hidden\";\n// import List from \"@material-ui/core/List\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import Icon from \"@material-ui/core/Icon\";\n// // core components\n// import AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\n// import RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n\n// import styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\n// const useStyles = makeStyles(styles);\n\n// export default function Sidebar(props) {\n//   const classes = useStyles();\n//   // verifies if routeName is the one active (in browser input)\n//   function activeRoute(routeName) {\n//     return window.location.href.indexOf(routeName) > -1 ? true : false;\n//   }\n//   const { color, logo, image, logoText, routes } = props;\n//   var links = (\n//     <List className={classes.list}>\n//       {routes.map((prop, key) => {\n//         var activePro = \" \";\n//         var listItemClasses;\n//         if (prop.path === \"/upgrade-to-pro\") {\n//           activePro = classes.activePro + \" \";\n//           listItemClasses = classNames({\n//             [\" \" + classes[color]]: true\n//           });\n//         } else {\n//           listItemClasses = classNames({\n//             [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n//           });\n//         }\n//         const whiteFontClasses = classNames({\n//           [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n//         });\n//         return (\n//           <NavLink\n//             to={prop.layout + prop.path}\n//             className={activePro + classes.item}\n//             activeClassName=\"active\"\n//             key={key}\n//           >\n//             <ListItem button className={classes.itemLink + listItemClasses}>\n//               {typeof prop.icon === \"string\" ? (\n//                 <Icon\n//                   className={classNames(classes.itemIcon, whiteFontClasses, {\n//                     [classes.itemIconRTL]: props.rtlActive\n//                   })}\n//                 >\n//                   {prop.icon}\n//                 </Icon>\n//               ) : (\n//                 <prop.icon\n//                   className={classNames(classes.itemIcon, whiteFontClasses, {\n//                     [classes.itemIconRTL]: props.rtlActive\n//                   })}\n//                 />\n//               )}\n//               <ListItemText\n//                 primary={props.rtlActive ? prop.rtlName : prop.name}\n//                 className={classNames(classes.itemText, whiteFontClasses, {\n//                   [classes.itemTextRTL]: props.rtlActive\n//                 })}\n//                 disableTypography={true}\n//               />\n//             </ListItem>\n//           </NavLink>\n//         );\n//       })}\n//     </List>\n//   );\n//   var brand = (\n//     <div className={classes.logo}>\n//       <a\n//         href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n//         className={classNames(classes.logoLink, {\n//           [classes.logoLinkRTL]: props.rtlActive\n//         })}\n//         target=\"_blank\"\n//       >\n//         <div className={classes.logoImage}>\n//           <img src={logo} alt=\"logo\" className={classes.img} />\n//         </div>\n//         {logoText}\n//       </a>\n//     </div>\n//   );\n//   return (\n//     <div>\n//       <Hidden mdUp implementation=\"css\">\n//         <Drawer\n//           variant=\"temporary\"\n//           anchor={props.rtlActive ? \"left\" : \"right\"}\n//           open={props.open}\n//           classes={{\n//             paper: classNames(classes.drawerPaper, {\n//               [classes.drawerPaperRTL]: props.rtlActive\n//             })\n//           }}\n//           onClose={props.handleDrawerToggle}\n//           ModalProps={{\n//             keepMounted: true // Better open performance on mobile.\n//           }}\n//         >\n//           {brand}\n//           <div className={classes.sidebarWrapper}>\n//             {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n//             {links}\n//           </div>\n//           {image !== undefined ? (\n//             <div\n//               className={classes.background}\n//               style={{ backgroundImage: \"url(\" + image + \")\" }}\n//             />\n//           ) : null}\n//         </Drawer>\n//       </Hidden>\n//       <Hidden smDown implementation=\"css\">\n//         <Drawer\n//           anchor={props.rtlActive ? \"right\" : \"left\"}\n//           variant=\"permanent\"\n//           open\n//           classes={{\n//             paper: classNames(classes.drawerPaper, {\n//               [classes.drawerPaperRTL]: props.rtlActive\n//             })\n//           }}\n//         >\n//           {brand}\n//           <div className={classes.sidebarWrapper}>{links}</div>\n//           {image !== undefined ? (\n//             <div\n//               className={classes.background}\n//               style={{ backgroundImage: \"url(\" + image + \")\" }}\n//             />\n//           ) : null}\n//         </Drawer>\n//       </Hidden>\n//     </div>\n//   );\n// }\n\n// Sidebar.propTypes = {\n//   rtlActive: PropTypes.bool,\n//   handleDrawerToggle: PropTypes.func,\n//   bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n//   logo: PropTypes.string,\n//   image: PropTypes.string,\n//   logoText: PropTypes.string,\n//   routes: PropTypes.arrayOf(PropTypes.object),\n//   open: PropTypes.bool\n// };\n"]},"metadata":{},"sourceType":"module"}