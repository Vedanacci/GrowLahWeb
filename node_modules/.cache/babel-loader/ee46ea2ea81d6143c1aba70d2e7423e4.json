{"ast":null,"code":"import _classCallCheck from \"/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard 2 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard 2 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard 2 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard 2 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard 2 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard 2 2/src/index.js\";\n\n/*!\n\n=========================================================\n* Material Dashboard React - v1.9.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport firebase from \"firebase\"; // import \"firebase/database\";\n// import {\n//   FirebaseDatabaseProvider,\n//   FirebaseDatabaseNode\n// } from \"@react-firebase/database\";\n\nimport { db_config } from \"config\";\nimport dashboard from \"views/Dashboard/Dashboard\"; // core components\n\nimport Admin from \"layouts/Admin.js\";\nimport RTL from \"layouts/RTL.js\";\nimport \"assets/css/material-dashboard-react.css?v=1.9.0\";\nimport Dashboard from \"views/Dashboard/Dashboard\";\nimport { dataPoints, allMetrics, allMetricsSide, lightlevels1, humiditylevels1, ph1, temp1, toggleConst } from \"variables/charts.js\";\nimport Login from \"views/Login/login\";\nvar newLevels = [];\nvar newLevelsSide = [];\nvar path = \"vedantbahadur\";\nvar pctg = 0.25;\nvar delta = 10;\nvar systemName = '';\nvar hist = createBrowserHistory();\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.app = firebase.initializeApp(db_config);\n    _this.auth = firebase.auth(); // this.database = firebase.database().ref().child(path);\n\n    _this.firestore = firebase.firestore();\n    _this.signIn = _this.signIn.bind(_assertThisInitialized(_this));\n    _this.refresh = _this.refresh.bind(_assertThisInitialized(_this));\n    _this.state = {\n      speed: []\n    };\n    _this.systemName = systemName;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//console.log(\"didmount\")\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      //console.log(\"Refreshing\")\n      // Object.assign(toggleConst, true)\n      //console.log(toggleConst);\n      this.setState({}); //console.log(\"Refreshed\")\n      // // this.getHumidity();\n      // this.signIn(\"test@gmail.com\", \"VedantTest\")\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn(email, password) {\n      var _this2 = this;\n\n      //console.log(\"Signing In\")\n      this.auth.signInWithEmailAndPassword(email, password).then(function (value) {\n        //console.log(value);\n        //console.log(value.user.phoneNumber);\n        _this2.firestore.collection(\"Users\").doc(value.user.uid).collection(\"myGarden\").get().then(function (snap) {\n          newLevels = [];\n          newLevelsSide = [];\n          snap.forEach(function (doc) {\n            //console.log(`${doc.id} => ${doc.data()}`);\n            path = doc.data()['path'];\n            var database = firebase.database().ref().child(path);\n\n            _this2.getIOTData(doc.id, database);\n\n            newLevelsSide.push(doc.id);\n          });\n          Object.assign(allMetricsSide, newLevelsSide);\n        });\n      });\n    }\n  }, {\n    key: \"compareObjects\",\n    value: function compareObjects(object1, object2, key) {\n      var obj1 = object1[key].toUpperCase();\n      var obj2 = object2[key].toUpperCase();\n\n      if (obj1 < obj2) {\n        return -1;\n      }\n\n      if (obj1 > obj2) {\n        return 1;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getHumidity\",\n    value: function getHumidity(snap, humidity, labels, name) {\n      var lightArray = []; //console.log(\"Toggle is\")\n      //console.log(toggleConst)\n\n      var lightArray = Object.values(snap.val()); //console.log(lightArray)\n\n      humidity.data = {\n        labels: labels,\n        series: [lightArray]\n      };\n      humidity.title = \"Humidity (%)\";\n      humidity.high = 85;\n      humidity.low = 65;\n      humidity.updateInfo((1 - pctg) * Math.min(lightArray), (1 + pctg) * Math.max(lightArray));\n\n      if (!newLevels.includes(humidity)) {\n        newLevels.push(humidity);\n      }\n\n      Object.assign(allMetrics, newLevels); //console.log(\"allmetrics is\")\n      //console.log(allMetrics)\n\n      this.setState({});\n    }\n  }, {\n    key: \"getIOTData\",\n    value: function getIOTData(name, database) {\n      var _this3 = this;\n\n      // Object.assign(lightLevels, lightlevels1);\n      var humidity = {};\n      Object.assign(humidity, humiditylevels1);\n      var ph = {};\n      Object.assign(ph, ph1);\n      var temp = {};\n      Object.assign(temp, temp1);\n      database.child(\"startTime\").on('value', function (start) {\n        var startTime = start.val()['hour'];\n        var min = start.val()['min'];\n        database.child(\"elapsed\").on('value', function (val) {\n          var ms = val.val() + startTime * 3600000;\n          var hour = Math.floor(ms * 1.15740741 * Math.pow(10, -8) % 1 * 24);\n          var mins = Math.floor(ms / 60000) % 60; //console.log(mins)\n\n          mins = (mins + min) % 60; //console.log(mins)\n          //console.log(\"Hours\", hour);\n\n          var labels = [];\n\n          for (var count = 0; count < dataPoints; count++) {\n            var lbl = hour - (dataPoints - 1 - count) * 2; //console.log(lbl)\n\n            if (lbl < 0) {\n              lbl = 24 + lbl;\n            }\n\n            var zeroPad = function zeroPad(num, places) {\n              return String(num).padStart(places, '0');\n            };\n\n            labels.push(zeroPad(lbl, 2) + \":\" + zeroPad(mins, 2));\n          }\n\n          database.child(\"light\").on('value', function (snap) {\n            //console.log(\"printing\")\n            var lightArray = Object.values(snap.val());\n\n            for (var count = 0; count < lightArray.length; count += 1) {\n              lightArray[count] = Math.round(lightArray[count] * 10000 / 4095.0) / 100;\n            } //console.log(\"Lightlevel\")\n            //console.log(lightArray)\n\n\n            lightlevels1.data = {\n              labels: labels,\n              series: [lightArray]\n            };\n            lightlevels1.title = \"Light (%)\";\n            lightlevels1.high = 100;\n            lightlevels1.low = 0; //console.log(lightlevels1.data.series)\n\n            if (!newLevels.includes(lightlevels1)) {\n              newLevels.push(lightlevels1);\n            }\n\n            Object.assign(allMetrics, newLevels); //console.log(\"allmetrics is\")\n            //console.log(allMetrics)\n\n            _this3.setState({});\n          });\n          database.child(\"humidity\").on('value', function (snap) {\n            //console.log(\"printing\")\n            // var lightArray = snap.val().slice(-dataPoints);\n            _this3.getHumidity(snap, humidity, labels, name);\n          });\n          database.child(\"ph\").on('value', function (snap) {\n            //console.log(\"printing\")\n            var lightArray = Object.values(snap.val()); //console.log(lightArray)\n\n            ph.data = {\n              labels: labels,\n              series: [lightArray]\n            };\n            ph.title = \"PH (0-14)\";\n            ph.high = 7.1;\n            ph.low = 6.5;\n            ph.updateInfo((1 - pctg) * Math.min(lightArray), (1 + pctg) * Math.max(lightArray));\n\n            if (!newLevels.includes(ph)) {\n              newLevels.push(ph);\n            }\n\n            Object.assign(allMetrics, newLevels); //console.log(\"allmetrics is\")\n            //console.log(allMetrics)\n\n            _this3.setState({});\n          });\n          database.child(\"temp\").on('value', function (snap) {\n            //console.log(\"printing\")\n            var lightArray = Object.values(snap.val()); //console.log(lightArray)\n\n            temp.data = {\n              labels: labels,\n              series: [lightArray]\n            };\n            temp.title = \"Temp (ËšC)\"; //name +\n\n            temp.high = 32;\n            temp.low = 27;\n            temp.updateInfo((1 - pctg) * Math.min(lightArray), (1 + pctg) * Math.max(lightArray));\n\n            if (!newLevels.includes(temp)) {\n              newLevels.push(temp);\n            }\n\n            newLevels.sort(function (first, second) {\n              //console.log(first, second);\n              return _this3.compareObjects(first, second, \"title\");\n            }); //console.log(newLevels)\n\n            Object.assign(allMetrics, newLevels); //console.log(\"allmetrics is\")\n            //console.log(allMetrics)\n\n            _this3.systemName = name;\n\n            _this3.setState({});\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      //console.log(\"rendering\");\n      if (this.auth.currentUser == null) {\n        return /*#__PURE__*/React.createElement(Login, {\n          fn: this.signIn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Router, {\n          history: hist,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Route, {\n          path: \"/admin\",\n          render: function render(props) {\n            return /*#__PURE__*/React.createElement(Admin, {\n              refresh: _this4.refresh,\n              systemName: _this4.systemName,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 51\n              }\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Redirect, {\n          from: \"/\",\n          to: \"/admin/dashboard\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }\n        }))) // <div>\n        //   <h1>Count is {this.state.speed}</h1>\n        // </div>\n        ;\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 3\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard 2 2/src/index.js"],"names":["React","Component","ReactDOM","createBrowserHistory","Router","Route","Switch","Redirect","firebase","db_config","dashboard","Admin","RTL","Dashboard","dataPoints","allMetrics","allMetricsSide","lightlevels1","humiditylevels1","ph1","temp1","toggleConst","Login","newLevels","newLevelsSide","path","pctg","delta","systemName","hist","App","props","app","initializeApp","auth","firestore","signIn","bind","refresh","state","speed","setState","email","password","signInWithEmailAndPassword","then","value","collection","doc","user","uid","get","snap","forEach","data","database","ref","child","getIOTData","id","push","Object","assign","object1","object2","key","obj1","toUpperCase","obj2","humidity","labels","name","lightArray","values","val","series","title","high","low","updateInfo","Math","min","max","includes","ph","temp","on","start","startTime","ms","hour","floor","mins","count","lbl","zeroPad","num","places","String","padStart","length","round","getHumidity","sort","first","second","compareObjects","currentUser","render","document","getElementById"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Material Dashboard React - v1.9.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport firebase from \"firebase\";\n// import \"firebase/database\";\n// import {\n//   FirebaseDatabaseProvider,\n//   FirebaseDatabaseNode\n// } from \"@react-firebase/database\";\nimport { db_config } from \"config\";\n\nimport dashboard from \"views/Dashboard/Dashboard\"\n\n// core components\nimport Admin from \"layouts/Admin.js\";\nimport RTL from \"layouts/RTL.js\";\n\nimport \"assets/css/material-dashboard-react.css?v=1.9.0\";\nimport Dashboard from \"views/Dashboard/Dashboard\";\n\nimport {\n  dataPoints,\n  allMetrics,\n  allMetricsSide,\n  lightlevels1,\n  humiditylevels1,\n  ph1,\n  temp1,\n  toggleConst\n} from \"variables/charts.js\";\nimport Login from \"views/Login/login\";\n\nvar newLevels = [];\nvar newLevelsSide = [];\nvar path = \"vedantbahadur\"\nvar pctg = 0.25;\nvar delta = 10;\nvar systemName = '';\n\nconst hist = createBrowserHistory();\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.app = firebase.initializeApp(db_config);\n    this.auth = firebase.auth()\n    // this.database = firebase.database().ref().child(path);\n    this.firestore = firebase.firestore()\n    this.signIn = this.signIn.bind(this)\n    this.refresh = this.refresh.bind(this)\n    this.state = {\n      speed: [],\n    };\n    this.systemName = systemName;\n  }\n\n  componentDidMount() {\n    //console.log(\"didmount\")\n  }\n\n  refresh() {\n    //console.log(\"Refreshing\")\n    // Object.assign(toggleConst, true)\n    //console.log(toggleConst);\n    this.setState({});\n    //console.log(\"Refreshed\")\n    // // this.getHumidity();\n    // this.signIn(\"test@gmail.com\", \"VedantTest\")\n  }\n\n  signIn(email, password) {\n    //console.log(\"Signing In\")\n    this.auth.signInWithEmailAndPassword(email, password).then(value => {\n      //console.log(value);\n      //console.log(value.user.phoneNumber);\n      this.firestore.collection(\"Users\").doc(value.user.uid).collection(\"myGarden\").get().then(\n        (snap) => {\n          newLevels = [];\n          newLevelsSide = [];\n          snap.forEach((doc) => {\n            //console.log(`${doc.id} => ${doc.data()}`);\n            path = doc.data()['path'];\n            var database = firebase.database().ref().child(path);\n            this.getIOTData(doc.id, database);\n            newLevelsSide.push(doc.id);\n          })\n          Object.assign(allMetricsSide, newLevelsSide)\n\n        }\n      )\n    })\n  }\n\n  compareObjects(object1, object2, key) {\n    const obj1 = object1[key].toUpperCase()\n    const obj2 = object2[key].toUpperCase()\n\n    if (obj1 < obj2) {\n      return -1\n    }\n    if (obj1 > obj2) {\n      return 1\n    }\n    return 0\n  }\n\n  getHumidity(snap, humidity, labels, name) {\n    var lightArray = [];\n    //console.log(\"Toggle is\")\n    //console.log(toggleConst)\n    var lightArray = Object.values(snap.val());\n\n    //console.log(lightArray)\n    humidity.data = {\n      labels: labels,\n      series: [lightArray]\n    }\n    humidity.title = \"Humidity (%)\"\n    humidity.high = 85\n    humidity.low = 65\n    humidity.updateInfo((1 - pctg) * Math.min(lightArray), (1 + pctg) * Math.max(lightArray))\n    if (!newLevels.includes(humidity)) {\n      newLevels.push(humidity)\n    }\n    Object.assign(allMetrics, newLevels)\n    //console.log(\"allmetrics is\")\n    //console.log(allMetrics)\n    this.setState({\n    });\n  }\n\n  getIOTData(name, database) {\n    // Object.assign(lightLevels, lightlevels1);\n    var humidity = {}\n    Object.assign(humidity, humiditylevels1);\n    var ph = {}\n    Object.assign(ph, ph1);\n    var temp = {}\n    Object.assign(temp, temp1);\n    database.child(\"startTime\").on('value', (start) => {\n      var startTime = start.val()['hour']\n      var min = start.val()['min']\n      database.child(\"elapsed\").on('value', (val) => {\n        var ms = val.val() + startTime * 3600000\n        var hour = Math.floor(((ms * 1.15740741 * (10 ** (-8))) % 1) * 24);\n        var mins = (Math.floor(ms / 60000) % 60)\n        //console.log(mins)\n        mins = (mins + min) % 60\n        //console.log(mins)\n        //console.log(\"Hours\", hour);\n        var labels = [];\n        for (var count = 0; count < dataPoints; count++) {\n          var lbl = hour - (dataPoints - 1 - count) * 2\n          //console.log(lbl)\n          if (lbl < 0) {\n            lbl = 24 + lbl\n          }\n          const zeroPad = (num, places) => String(num).padStart(places, '0')\n          labels.push(zeroPad(lbl, 2) + \":\" + zeroPad(mins, 2))\n        }\n        database.child(\"light\").on('value', (snap) => {\n          //console.log(\"printing\")\n          var lightArray = Object.values(snap.val());\n          for (var count = 0; count < lightArray.length; count += 1) {\n            lightArray[count] = Math.round((lightArray[count] * 10000 / 4095.0)) / 100\n          }\n          //console.log(\"Lightlevel\")\n          //console.log(lightArray)\n          lightlevels1.data = {\n            labels: labels,\n            series: [lightArray]\n          }\n          lightlevels1.title = \"Light (%)\"\n          lightlevels1.high = 100\n          lightlevels1.low = 0\n          //console.log(lightlevels1.data.series)\n          if (!newLevels.includes(lightlevels1)) {\n            newLevels.push(lightlevels1)\n          }\n          Object.assign(allMetrics, newLevels)\n          //console.log(\"allmetrics is\")\n          //console.log(allMetrics)\n          this.setState({\n          });\n        });\n        database.child(\"humidity\").on('value', (snap) => {\n          //console.log(\"printing\")\n          // var lightArray = snap.val().slice(-dataPoints);\n          this.getHumidity(snap, humidity, labels, name)\n        });\n        database.child(\"ph\").on('value', (snap) => {\n          //console.log(\"printing\")\n          var lightArray = Object.values(snap.val());\n          //console.log(lightArray)\n          ph.data = {\n            labels: labels,\n            series: [lightArray]\n          }\n          ph.title = \"PH (0-14)\"\n          ph.high = 7.1\n          ph.low = 6.5\n          ph.updateInfo((1 - pctg) * Math.min(lightArray), (1 + pctg) * Math.max(lightArray))\n          if (!newLevels.includes(ph)) {\n            newLevels.push(ph)\n          }\n          Object.assign(allMetrics, newLevels)\n          //console.log(\"allmetrics is\")\n          //console.log(allMetrics)\n          this.setState({\n          });\n        });\n        database.child(\"temp\").on('value', (snap) => {\n          //console.log(\"printing\")\n          var lightArray = Object.values(snap.val());\n          //console.log(lightArray)\n          temp.data = {\n            labels: labels,\n            series: [lightArray]\n          }\n          temp.title = \"Temp (ËšC)\" //name +\n          temp.high = 32\n          temp.low = 27\n          temp.updateInfo((1 - pctg) * Math.min(lightArray), (1 + pctg) * Math.max(lightArray))\n          if (!newLevels.includes(temp)) {\n            newLevels.push(temp)\n          }\n          newLevels.sort((first, second) => {\n            //console.log(first, second);\n            return this.compareObjects(first, second, \"title\");\n          });\n          //console.log(newLevels)\n          Object.assign(allMetrics, newLevels)\n          //console.log(\"allmetrics is\")\n          //console.log(allMetrics)\n          this.systemName = name;\n          this.setState({\n          });\n        });\n      });\n    })\n  };\n\n  render() {\n    //console.log(\"rendering\");\n    if (this.auth.currentUser == null) {\n      return (\n        <Login fn={this.signIn} />\n      )\n    } else {\n      return (\n        <Router history={hist}>\n          <Switch>\n            {/* <Admin></Admin> */}\n            <Route path=\"/admin\" render={props => <Admin refresh={this.refresh} systemName = {this.systemName}/>} />\n            {/* <Route path=\"/rtl\" component={RTL} /> */}\n            <Redirect from=\"/\" to=\"/admin/dashboard\" />\n            {/* <Dashboard/> */}\n          </Switch>\n        </Router>\n        // <div>\n        //   <h1>Count is {this.state.speed}</h1>\n        // </div>\n      );\n\n    }\n\n  }\n}\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n\n"]},"metadata":{},"sourceType":"module"}