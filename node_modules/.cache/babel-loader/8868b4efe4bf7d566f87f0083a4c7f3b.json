{"ast":null,"code":"import _defineProperty from \"/Users/garg10435/Desktop/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/garg10435/Desktop/material-dashboard-react-master/src/components/Sidebar/Sidebar.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function Sidebar(props) {\n  var classes = useStyles(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var color = props.color,\n      logo = props.logo,\n      image = props.image,\n      logoText = props.logoText,\n      routes = props.routes;\n  var links = /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, routes.map(function (prop, key) {\n    var activePro = \" \";\n    var listItemClasses;\n\n    if (prop.path === \"/upgrade-to-pro\") {\n      activePro = classes.activePro + \" \";\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], true));\n    } else {\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], activeRoute(prop.layout + prop.path)));\n    }\n\n    var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.layout + prop.path))); // return (\n    //   <NavLink\n    //     to={prop.layout + prop.path}\n    //     className={activePro + classes.item}\n    //     activeClassName=\"active\"\n    //     key={key}\n    //   >\n    //     <ListItem button className={classes.itemLink + listItemClasses}>\n    //       {typeof prop.icon === \"string\" ? (\n    //         <Icon\n    //           className={classNames(classes.itemIcon, whiteFontClasses, {\n    //             [classes.itemIconRTL]: props.rtlActive\n    //           })}\n    //         >\n    //           {prop.icon}\n    //         </Icon>\n    //       ) : (\n    //         <prop.icon\n    //           className={classNames(classes.itemIcon, whiteFontClasses, {\n    //             [classes.itemIconRTL]: props.rtlActive\n    //           })}\n    //         />\n    //       )}\n    //       <ListItemText\n    //         primary={props.rtlActive ? prop.rtlName : prop.name}\n    //         className={classNames(classes.itemText, whiteFontClasses, {\n    //           [classes.itemTextRTL]: props.rtlActive\n    //         })}\n    //         disableTypography={true}\n    //       />\n    //     </ListItem>\n    //   </NavLink>\n    // );\n  }));\n  var brand = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.creative-tim.com?ref=mdr-sidebar\",\n    className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)),\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logoImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), logoText));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, brand, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, props.rtlActive ? /*#__PURE__*/React.createElement(RTLNavbarLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(AdminNavbarLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 53\n    }\n  }), links), image !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }) : null)), /*#__PURE__*/React.createElement(Hidden, {\n    smD: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, brand, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, links), image !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }) : null)));\n}\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/garg10435/Desktop/material-dashboard-react-master/src/components/Sidebar/Sidebar.js"],"names":["React","classNames","PropTypes","NavLink","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","styles","useStyles","Sidebar","props","classes","activeRoute","routeName","window","location","href","indexOf","color","logo","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","layout","whiteFontClasses","whiteFont","brand","logoLink","logoLinkRTL","rtlActive","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","bool","func","bgColor","oneOf","string","arrayOf","object"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAEA,OAAOC,MAAP,MAAmB,gEAAnB;AAEA,IAAMC,SAAS,GAAGV,UAAU,CAACS,MAAD,CAA5B;AAEA,eAAe,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,MAAMC,OAAO,GAAGH,SAAS,EAAzB,CADqC,CAErC;;AACA,WAASI,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,WAAOC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6BJ,SAA7B,IAA0C,CAAC,CAA3C,GAA+C,IAA/C,GAAsD,KAA7D;AACD;;AALoC,MAM7BK,KAN6B,GAMYR,KANZ,CAM7BQ,KAN6B;AAAA,MAMtBC,IANsB,GAMYT,KANZ,CAMtBS,IANsB;AAAA,MAMhBC,KANgB,GAMYV,KANZ,CAMhBU,KANgB;AAAA,MAMTC,QANS,GAMYX,KANZ,CAMTW,QANS;AAAA,MAMCC,MAND,GAMYZ,KANZ,CAMCY,MAND;AAOrC,MAAIC,KAAK,gBACP,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAACa,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AACzB,QAAIC,SAAS,GAAG,GAAhB;AACA,QAAIC,eAAJ;;AACA,QAAIH,IAAI,CAACI,IAAL,KAAc,iBAAlB,EAAqC;AACnCF,MAAAA,SAAS,GAAGjB,OAAO,CAACiB,SAAR,GAAoB,GAAhC;AACAC,MAAAA,eAAe,GAAGlC,UAAU,qBACzB,MAAMgB,OAAO,CAACO,KAAD,CADY,EACF,IADE,EAA5B;AAGD,KALD,MAKO;AACLW,MAAAA,eAAe,GAAGlC,UAAU,qBACzB,MAAMgB,OAAO,CAACO,KAAD,CADY,EACFN,WAAW,CAACc,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IAApB,CADT,EAA5B;AAGD;;AACD,QAAME,gBAAgB,GAAGrC,UAAU,qBAChC,MAAMgB,OAAO,CAACsB,SADkB,EACNrB,WAAW,CAACc,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IAApB,CADL,EAAnC,CAbyB,CAgBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjDA,CADH,CADF;AAsDA,MAAII,KAAK,gBACP;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACQ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,8CADP;AAEE,IAAA,SAAS,EAAExB,UAAU,CAACgB,OAAO,CAACwB,QAAT,sBAClBxB,OAAO,CAACyB,WADU,EACI1B,KAAK,CAAC2B,SADV,EAFvB;AAKE,IAAA,MAAM,EAAC,QALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAK,IAAA,SAAS,EAAE1B,OAAO,CAAC2B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEnB,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAA2B,IAAA,SAAS,EAAER,OAAO,CAAC4B,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAUGlB,QAVH,CADF,CADF;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAa,IAAA,cAAc,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,MAAM,EAAEX,KAAK,CAAC2B,SAAN,GAAkB,MAAlB,GAA2B,OAFrC;AAGE,IAAA,IAAI,EAAE3B,KAAK,CAAC8B,IAHd;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE9C,UAAU,CAACgB,OAAO,CAAC+B,WAAT,sBACd/B,OAAO,CAACgC,cADM,EACWjC,KAAK,CAAC2B,SADjB;AADV,KAJX;AASE,IAAA,OAAO,EAAE3B,KAAK,CAACkC,kBATjB;AAUE,IAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,IADH,CACQ;;AADR,KAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGX,KAdH,eAeE;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACmC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpC,KAAK,CAAC2B,SAAN,gBAAkB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,gBAAuC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,EAEGd,KAFH,CAfF,EAmBGH,KAAK,KAAK2B,SAAV,gBACC;AACE,IAAA,SAAS,EAAEpC,OAAO,CAACqC,UADrB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAS7B,KAAT,GAAiB;AAApC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKG,IAxBN,CADF,CADF,eA6BE,oBAAC,MAAD;AAAQ,IAAA,GAAG,MAAX;AAAY,IAAA,cAAc,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAEV,KAAK,CAAC2B,SAAN,GAAkB,OAAlB,GAA4B,MADtC;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,IAAI,MAHN;AAIE,IAAA,OAAO,EAAE;AACPI,MAAAA,KAAK,EAAE9C,UAAU,CAACgB,OAAO,CAAC+B,WAAT,sBACd/B,OAAO,CAACgC,cADM,EACWjC,KAAK,CAAC2B,SADjB;AADV,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGH,KAVH,eAWE;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACmC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCvB,KAAzC,CAXF,EAYGH,KAAK,KAAK2B,SAAV,gBACC;AACE,IAAA,SAAS,EAAEpC,OAAO,CAACqC,UADrB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAS7B,KAAT,GAAiB;AAApC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKG,IAjBN,CADF,CA7BF,CADF;AAqDD;AAEDX,OAAO,CAACyC,SAAR,GAAoB;AAClBb,EAAAA,SAAS,EAAEzC,SAAS,CAACuD,IADH;AAElBP,EAAAA,kBAAkB,EAAEhD,SAAS,CAACwD,IAFZ;AAGlBC,EAAAA,OAAO,EAAEzD,SAAS,CAAC0D,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B,EAAsC,KAAtC,CAAhB,CAHS;AAIlBnC,EAAAA,IAAI,EAAEvB,SAAS,CAAC2D,MAJE;AAKlBnC,EAAAA,KAAK,EAAExB,SAAS,CAAC2D,MALC;AAMlBlC,EAAAA,QAAQ,EAAEzB,SAAS,CAAC2D,MANF;AAOlBjC,EAAAA,MAAM,EAAE1B,SAAS,CAAC4D,OAAV,CAAkB5D,SAAS,CAAC6D,MAA5B,CAPU;AAQlBjB,EAAAA,IAAI,EAAE5C,SAAS,CAACuD;AARE,CAApB","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        // return (\n        //   <NavLink\n        //     to={prop.layout + prop.path}\n        //     className={activePro + classes.item}\n        //     activeClassName=\"active\"\n        //     key={key}\n        //   >\n        //     <ListItem button className={classes.itemLink + listItemClasses}>\n        //       {typeof prop.icon === \"string\" ? (\n        //         <Icon\n        //           className={classNames(classes.itemIcon, whiteFontClasses, {\n        //             [classes.itemIconRTL]: props.rtlActive\n        //           })}\n        //         >\n        //           {prop.icon}\n        //         </Icon>\n        //       ) : (\n        //         <prop.icon\n        //           className={classNames(classes.itemIcon, whiteFontClasses, {\n        //             [classes.itemIconRTL]: props.rtlActive\n        //           })}\n        //         />\n        //       )}\n        //       <ListItemText\n        //         primary={props.rtlActive ? prop.rtlName : prop.name}\n        //         className={classNames(classes.itemText, whiteFontClasses, {\n        //           [classes.itemTextRTL]: props.rtlActive\n        //         })}\n        //         disableTypography={true}\n        //       />\n        //     </ListItem>\n        //   </NavLink>\n        // );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n        target=\"_blank\"\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smD implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}