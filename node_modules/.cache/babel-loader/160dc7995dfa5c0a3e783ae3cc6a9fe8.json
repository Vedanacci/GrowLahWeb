{"ast":null,"code":"// ##############################\n// // // javascript library for creating charts\n// #############################\nvar Chartist = require(\"chartist\");\n\nvar labels = [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\"];\nvar options = {\n  lineSmooth: Chartist.Interpolation.cardinal({\n    tension: 200\n  }),\n  low: 0,\n  high: 1000,\n  // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n  chartPadding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n}; // #############################\n// // // variables used to create animation on charts\n// #############################\n\nvar delays = 80,\n    durations = 500;\nvar delays2 = 80,\n    durations2 = 500; // ##############################\n// // // Daily Sales\n// #############################\n\nvar lightlevels1 = {\n  data: {\n    labels: labels,\n    series: [[12, 17, 7, 17, 23, 18, 10]]\n  },\n  options: options[\"with\"](high = 4096) // for animation\n\n}; // ##############################\n// // // Email Subscriptions\n// #############################\n\nvar humiditylevels1 = {\n  data: {\n    labels: labels,\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  }\n}; // ##############################\n// // // Completed Tasks\n// #############################\n\nvar waterlevels1 = {\n  data: {\n    labels: labels,\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 200\n    }),\n    low: 0,\n    high: 1000,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n};\nvar lightlevels2 = {\n  data: {\n    labels: labels,\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 4096,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  } // for animation\n\n}; // ##############################\n// // // Email Subscriptions\n// #############################\n\nvar humiditylevels2 = {\n  data: {\n    labels: labels,\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  }\n}; // ##############################\n// // // Completed Tasks\n// #############################\n\nvar waterlevels2 = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n};\nvar lightlevels3 = {\n  data: {\n    labels: [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\"],\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 4096,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  } // for animation\n\n}; // ##############################\n// // // Email Subscriptions\n// #############################\n\nvar humiditylevels3 = {\n  data: {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  }\n}; // ##############################\n// // // Completed Tasks\n// #############################\n\nvar waterlevels3 = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n};\nmodule.exports = {\n  lightlevels1: lightlevels1,\n  humiditylevels1: humiditylevels1,\n  waterlevels1: waterlevels1,\n  lightlevels2: lightlevels2,\n  humiditylevels2: humiditylevels2,\n  waterlevels2: waterlevels2,\n  lightlevels3: lightlevels3,\n  humiditylevels3: humiditylevels3,\n  waterlevels3: waterlevels3\n};","map":{"version":3,"sources":["/Users/vedantbahadur/Documents/Programming/HTML/material-dashboard-react-master/src/variables/charts.js"],"names":["Chartist","require","labels","options","lineSmooth","Interpolation","cardinal","tension","low","high","chartPadding","top","right","bottom","left","delays","durations","delays2","durations2","lightlevels1","data","series","humiditylevels1","axisX","showGrid","waterlevels1","lightlevels2","humiditylevels2","waterlevels2","lightlevels3","humiditylevels3","waterlevels3","module","exports"],"mappings":"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","sourcesContent":["// ##############################\n// // // javascript library for creating charts\n// #############################\nvar Chartist = require(\"chartist\");\n\nvar labels = [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\"];\nvar options = {\n  lineSmooth: Chartist.Interpolation.cardinal({\n    tension: 200\n  }),\n  low: 0,\n  high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n  chartPadding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n};\n\n\n// #############################\n// // // variables used to create animation on charts\n// #############################\nvar delays = 80,\n  durations = 500;\nvar delays2 = 80,\n  durations2 = 500;\n\n// ##############################\n// // // Daily Sales\n// #############################\n\nconst lightlevels1 = {\n  data: {\n    labels: labels,\n    series: [[12, 17, 7, 17, 23, 18, 10]]\n  },\n  options: options.with(high=4096),\n  // for animation\n\n};\n\n// ##############################\n// // // Email Subscriptions\n// #############################\n\nconst humiditylevels1 = {\n  data: {\n    labels: labels,\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\n// ##############################\n// // // Completed Tasks\n// #############################\n\nconst waterlevels1 = {\n  data: {\n    labels: labels,\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 200\n    }),\n    low: 0,\n    high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\nconst lightlevels2 = {\n  data: {\n    labels: labels,\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 4096, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  // for animation\n\n};\n\n// ##############################\n// // // Email Subscriptions\n// #############################\n\nconst humiditylevels2 = {\n  data: {\n    labels: labels,\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\n// ##############################\n// // // Completed Tasks\n// #############################\n\nconst waterlevels2 = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\nconst lightlevels3 = {\n  data: {\n    labels: [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\"],\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 4096, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  // for animation\n\n};\n\n// ##############################\n// // // Email Subscriptions\n// #############################\n\nconst humiditylevels3 = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\n// ##############################\n// // // Completed Tasks\n// #############################\n\nconst waterlevels3 = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\n\n\nmodule.exports = {\n  lightlevels1,\n  humiditylevels1,\n  waterlevels1,\n  lightlevels2,\n  humiditylevels2,\n  waterlevels2,\n  lightlevels3,\n  humiditylevels3,\n  waterlevels3,\n};\n"]},"metadata":{},"sourceType":"module"}