{"ast":null,"code":"// ##############################\n// // // javascript library for creating charts\n// #############################\nvar Chartist = require(\"chartist\");\n\nfunction options() {\n  var high = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n  return {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 200\n    }),\n    low: 0,\n    high: high,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 20,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  };\n}\n\n; // #############################\n// // // variables used to create animation on charts\n// #############################\n\nvar delays = 80,\n    durations = 500;\nvar delays2 = 80,\n    durations2 = 500; // ##############################\n// // // Daily Sales\n// #############################\n\nvar labels = [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\"];\nvar lightlevels1 = {\n  data: {\n    labels: labels,\n    series: [[12, 17, 7, 17, 23, 18, 10]]\n  },\n  options: options(),\n  title: \"System 1 Light (%)\" // for animation\n\n}; // ##############################\n// // // Email Subscriptions\n// #############################\n\nvar humiditylevels1 = {\n  data: {\n    labels: labels,\n    series: [[80, 43, 30, 70, 53, 43, 36]]\n  },\n  options: options(),\n  title: \"System 1 Humidity (%)\"\n}; // ##############################\n// // // Completed Tasks\n// #############################\n\nvar ph1 = {\n  data: {\n    labels: labels,\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: options(1000),\n  title: \"System 1 PH (0-14)\"\n};\nvar temp1 = {\n  data: {\n    labels: labels,\n    series: [[23, 75, 45, 30, 28, 24, 20, 19]]\n  },\n  options: options(50),\n  title: \"System 1 Temp (ËšC)\"\n};\nvar lightlevels2 = {\n  data: {\n    labels: labels,\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 4096,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  } // for animation\n\n}; // ##############################\n// // // Email Subscriptions\n// #############################\n\nvar humiditylevels2 = {\n  data: {\n    labels: labels,\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  }\n}; // ##############################\n// // // Completed Tasks\n// #############################\n\nvar waterlevels2 = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n};\nvar lightlevels3 = {\n  data: {\n    labels: [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\"],\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 4096,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  } // for animation\n\n}; // ##############################\n// // // Email Subscriptions\n// #############################\n\nvar humiditylevels3 = {\n  data: {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  }\n}; // ##############################\n// // // Completed Tasks\n// #############################\n\nvar waterlevels3 = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n};\nvar allMetrics = [lightlevels1, humiditylevels1, ph1, temp1];\nmodule.exports = {\n  allMetrics: allMetrics,\n  labels: labels,\n  lightlevels1: lightlevels1,\n  humiditylevels1: humiditylevels1,\n  ph1: ph1,\n  lightlevels2: lightlevels2,\n  humiditylevels2: humiditylevels2,\n  waterlevels2: waterlevels2,\n  lightlevels3: lightlevels3,\n  humiditylevels3: humiditylevels3,\n  waterlevels3: waterlevels3,\n  temp1: temp1\n};","map":{"version":3,"sources":["/Users/vedantbahadur/Documents/Programming/HTML/material-dashboard-react-master/src/variables/charts.js"],"names":["Chartist","require","options","high","lineSmooth","Interpolation","cardinal","tension","low","chartPadding","top","right","bottom","left","delays","durations","delays2","durations2","labels","lightlevels1","data","series","title","humiditylevels1","ph1","temp1","lightlevels2","humiditylevels2","axisX","showGrid","waterlevels2","lightlevels3","humiditylevels3","waterlevels3","allMetrics","module","exports"],"mappings":"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","sourcesContent":["// ##############################\n// // // javascript library for creating charts\n// #############################\nvar Chartist = require(\"chartist\");\nfunction options (high = 100) {\n  return ({\n  lineSmooth: Chartist.Interpolation.cardinal({\n    tension: 200\n  }),\n  low: 0,\n  high: high, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n  chartPadding: {\n    top: 20,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }})\n};\n\n\n// #############################\n// // // variables used to create animation on charts\n// #############################\nvar delays = 80,\n  durations = 500;\nvar delays2 = 80,\n  durations2 = 500;\n\n// ##############################\n// // // Daily Sales\n// #############################\n\nconst labels = [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\"];\n\nconst lightlevels1 = {\n  data: {\n    labels: labels,\n    series: [[12, 17, 7, 17, 23, 18, 10]]\n  },\n  options: options(),\n  title: \"System 1 Light (%)\",\n  // for animation\n\n};\n\n// ##############################\n// // // Email Subscriptions\n// #############################\n\nconst humiditylevels1 = {\n  data: {\n    labels: labels,\n    series: [[80, 43, 30, 70, 53, 43, 36]]\n  },\n  options: options(),\n  title: \"System 1 Humidity (%)\",\n};\n\n\n\n// ##############################\n// // // Completed Tasks\n// #############################\n\nconst ph1 = {\n  data: {\n    labels: labels,\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: options(1000),\n  title: \"System 1 PH (0-14)\",\n};\n\nconst temp1 = {\n  data: {\n    labels: labels,\n    series: [[23, 75, 45, 30, 28, 24, 20, 19]]\n  },\n  options: options(50),\n  title: \"System 1 Temp (ËšC)\",\n};\n\nconst lightlevels2 = {\n  data: {\n    labels: labels,\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 4096, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  // for animation\n\n};\n\n// ##############################\n// // // Email Subscriptions\n// #############################\n\nconst humiditylevels2 = {\n  data: {\n    labels: labels,\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\n// ##############################\n// // // Completed Tasks\n// #############################\n\nconst waterlevels2 = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\nconst lightlevels3 = {\n  data: {\n    labels: [\"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\"],\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 4096, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  // for animation\n\n};\n\n// ##############################\n// // // Email Subscriptions\n// #############################\n\nconst humiditylevels3 = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    series: [[800, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\n\n\n// ##############################\n// // // Completed Tasks\n// #############################\n\nconst waterlevels3 = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n};\n\nconst allMetrics = [lightlevels1, humiditylevels1, ph1, temp1];\n\nmodule.exports = {\n  allMetrics,\n  labels,\n  lightlevels1,\n  humiditylevels1,\n  ph1,\n  lightlevels2,\n  humiditylevels2,\n  waterlevels2,\n  lightlevels3,\n  humiditylevels3,\n  waterlevels3,\n  temp1,\n};\n"]},"metadata":{},"sourceType":"module"}