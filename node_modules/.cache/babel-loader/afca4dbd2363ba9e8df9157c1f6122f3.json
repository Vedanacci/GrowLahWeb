{"ast":null,"code":"// import React from \"react\";\n// import classNames from \"classnames\";\n// import PropTypes from \"prop-types\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Snack from \"@material-ui/core/Snackbar\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// // @material-ui/icons\n// import Close from \"@material-ui/icons/Close\";\n// // core components\n// import styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n// const useStyles = makeStyles(styles);\n// export default function Snackbar(props) {\n//   const classes = useStyles();\n//   const { message, color, close, icon, place, open, rtlActive } = props;\n//   var action = [];\n//   const messageClasses = classNames({\n//     [classes.iconMessage]: icon !== undefined\n//   });\n//   if (close !== undefined) {\n//     action = [\n//       <IconButton\n//         className={classes.iconButton}\n//         key=\"close\"\n//         aria-label=\"Close\"\n//         color=\"inherit\"\n//         onClick={() => props.closeNotification()}\n//       >\n//         <Close className={classes.close} />\n//       </IconButton>\n//     ];\n//   }\n//   return (\n//     <Snack\n//       anchorOrigin={{\n//         vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n//         horizontal:\n//           place.indexOf(\"l\") !== -1\n//             ? \"left\"\n//             : place.indexOf(\"c\") !== -1\n//             ? \"center\"\n//             : \"right\"\n//       }}\n//       open={open}\n//       message={\n//         <div>\n//           {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n//           <span className={messageClasses}>{message}</span>\n//         </div>\n//       }\n//       action={action}\n//       ContentProps={{\n//         classes: {\n//           root: classes.root + \" \" + classes[color],\n//           message: classes.message,\n//           action: classNames({ [classes.actionRTL]: rtlActive })\n//         }\n//       }}\n//     />\n//   );\n// }\n// Snackbar.propTypes = {\n//   message: PropTypes.node.isRequired,\n//   color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n//   close: PropTypes.bool,\n//   icon: PropTypes.object,\n//   place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n//   open: PropTypes.bool,\n//   rtlActive: PropTypes.bool,\n//   closeNotification: PropTypes.func\n// };","map":{"version":3,"sources":["/Users/garg10435/Desktop/material-dashboard-react-master/src/components/Snackbar/Snackbar.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\n// import classNames from \"classnames\";\n// import PropTypes from \"prop-types\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Snack from \"@material-ui/core/Snackbar\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// // @material-ui/icons\n// import Close from \"@material-ui/icons/Close\";\n// // core components\n// import styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\n// const useStyles = makeStyles(styles);\n\n// export default function Snackbar(props) {\n//   const classes = useStyles();\n//   const { message, color, close, icon, place, open, rtlActive } = props;\n//   var action = [];\n//   const messageClasses = classNames({\n//     [classes.iconMessage]: icon !== undefined\n//   });\n//   if (close !== undefined) {\n//     action = [\n//       <IconButton\n//         className={classes.iconButton}\n//         key=\"close\"\n//         aria-label=\"Close\"\n//         color=\"inherit\"\n//         onClick={() => props.closeNotification()}\n//       >\n//         <Close className={classes.close} />\n//       </IconButton>\n//     ];\n//   }\n//   return (\n//     <Snack\n//       anchorOrigin={{\n//         vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n//         horizontal:\n//           place.indexOf(\"l\") !== -1\n//             ? \"left\"\n//             : place.indexOf(\"c\") !== -1\n//             ? \"center\"\n//             : \"right\"\n//       }}\n//       open={open}\n//       message={\n//         <div>\n//           {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n//           <span className={messageClasses}>{message}</span>\n//         </div>\n//       }\n//       action={action}\n//       ContentProps={{\n//         classes: {\n//           root: classes.root + \" \" + classes[color],\n//           message: classes.message,\n//           action: classNames({ [classes.actionRTL]: rtlActive })\n//         }\n//       }}\n//     />\n//   );\n// }\n\n// Snackbar.propTypes = {\n//   message: PropTypes.node.isRequired,\n//   color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n//   close: PropTypes.bool,\n//   icon: PropTypes.object,\n//   place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n//   open: PropTypes.bool,\n//   rtlActive: PropTypes.bool,\n//   closeNotification: PropTypes.func\n// };\n"]},"metadata":{},"sourceType":"module"}