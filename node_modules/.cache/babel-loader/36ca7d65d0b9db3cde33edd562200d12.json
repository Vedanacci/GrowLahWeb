{"ast":null,"code":"var _jsxFileName = \"/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard/src/views/Dashboard/Dashboard.js\";\nimport React from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { db_config } from \"config\";\nimport { bugs, website, server } from \"variables/general.js\";\nimport { allMetrics, dataPoints } from \"variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { toggleConst } from \"variables/charts\";\nvar useStyles = makeStyles(styles);\nexport default function Dashboard() {\n  var _this = this;\n\n  var classes = useStyles();\n  var allMetrics2 = [];\n  console.log(allMetrics);\n  console.log(\"Toggle\");\n  console.log(toggleConst);\n  Object.assign(toggleConst, !toggleConst);\n\n  for (var count = 0; count < allMetrics.length; count++) {\n    var mtrc = {};\n    var metric = allMetrics[count];\n    console.log(\"c\");\n    console.log(metric);\n    Object.assign(mtrc, metric);\n    console.log(\"cd\");\n    console.log(mtrc);\n\n    if (toggleConst) {\n      mtrc.data.series[0] = mtrc.data.series[0].slice(-dataPoints);\n    } else {\n      mtrc.data.series[0] = mtrc.data.series[0].slice(0, dataPoints);\n    }\n\n    allMetrics2.push(mtrc);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, allMetrics2.map(function (i) {\n    console.log(i.high);\n    console.log(i.data.series[0]);\n    console.log(i.low);\n    var color = i.high >= i.data.series[0][dataPoints - 1] && i.low <= i.data.series[0][dataPoints - 1] ? \"success\" : \"danger\";\n    return /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      key: i.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      chart: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      className: \"ct-chart\",\n      data: i.data,\n      type: \"Line\",\n      options: i.options,\n      listener: i.animation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, i.title, \" : \", i.data.series[0][dataPoints - 1]))));\n  })));\n}","map":{"version":3,"sources":["/Users/vedantbahadur/Documents/Programming/HTML/Firebase dashboard/src/views/Dashboard/Dashboard.js"],"names":["React","ChartistGraph","makeStyles","Icon","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","firebase","db_config","bugs","website","server","allMetrics","dataPoints","styles","toggleConst","useStyles","Dashboard","classes","allMetrics2","console","log","Object","assign","count","length","mtrc","metric","data","series","slice","push","map","i","high","low","color","title","options","animation","cardTitle"],"mappings":"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","sourcesContent":["import React from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { db_config } from \"config\";\n\nimport { bugs, website, server } from \"variables/general.js\";\n\nimport {\n  allMetrics,\n  dataPoints\n} from \"variables/charts.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { toggleConst } from \"variables/charts\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  var allMetrics2 = [];\n  console.log(allMetrics)\n  console.log(\"Toggle\")\n  console.log(toggleConst);\n  Object.assign(toggleConst, !toggleConst)\n  for (var count = 0; count < allMetrics.length; count++) {\n    var mtrc = {};\n    var metric = allMetrics[count]\n    console.log(\"c\")\n    console.log(metric);\n    Object.assign(mtrc, metric);\n    console.log(\"cd\")\n    console.log(mtrc)\n    if (toggleConst) {\n      mtrc.data.series[0] = mtrc.data.series[0].slice(-dataPoints);\n    }\n    else {\n      mtrc.data.series[0] = mtrc.data.series[0].slice(0, dataPoints);\n    }\n    \n    allMetrics2.push(mtrc)\n  }\n  return (\n    <div>\n\n      <GridContainer>\n        {allMetrics2.map(i => {\n          console.log(i.high)\n          console.log(i.data.series[0])\n          console.log(i.low)\n          var color = (i.high >= i.data.series[0][dataPoints-1] && i.low <= i.data.series[0][dataPoints-1]) ? \"success\" : \"danger\"\n          return <GridItem xs={12} sm={12} md={6} key={i.title}>\n            <Card chart>\n              <CardHeader color={color}>\n                <ChartistGraph\n                  className=\"ct-chart\"\n                  data={i.data}\n                  type=\"Line\"\n                  options={i.options}\n                  listener={i.animation}\n                />\n              </CardHeader>\n              <CardBody>\n                <h4 className={classes.cardTitle}>{i.title} : {i.data.series[0][dataPoints-1]}</h4>\n              </CardBody>\n            </Card>\n          </GridItem>;\n        })}\n      </GridContainer>\n\n      {/* <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"info\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={lightlevels1.data}\n                type=\"Line\"\n                options={lightlevels1.options}\n                listener={lightlevels1.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 1 Light (%)</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n\n\n\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"rose\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={humiditylevels1.data}\n                type=\"Line\"\n                options={humiditylevels1.options}\n                responsiveOptions={humiditylevels1.responsiveOptions}\n                listener={humiditylevels1.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 1 Humidity (%)</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n\n\n\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={ph1.data}\n                type=\"Line\"\n                options={ph1.options}\n                listener={ph1.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 1 PH Level</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"info\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={lightlevels2.data}\n                type=\"Line\"\n                options={lightlevels2.options}\n                listener={lightlevels2.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 2 Light (%)</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n\n\n\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"rose\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={humiditylevels2.data}\n                type=\"Line\"\n                options={humiditylevels2.options}\n                responsiveOptions={humiditylevels2.responsiveOptions}\n                listener={humiditylevels2.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 2 Humidity (%)</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n\n\n\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={waterlevels2.data}\n                type=\"Line\"\n                options={waterlevels2.options}\n                listener={waterlevels2.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 2 Water Level</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"info\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={lightlevels3.data}\n                type=\"Line\"\n                options={lightlevels3.options}\n                listener={lightlevels3.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 3 Light (%)</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n\n\n\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"rose\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={humiditylevels3.data}\n                type=\"Line\"\n                options={humiditylevels3.options}\n                responsiveOptions={humiditylevels3.responsiveOptions}\n                listener={humiditylevels3.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 3 Humidity (%)</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n\n\n\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={waterlevels3.data}\n                type=\"Line\"\n                options={waterlevels3.options}\n                listener={waterlevels3.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>System 3 Water Level</h4>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer> */}\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}